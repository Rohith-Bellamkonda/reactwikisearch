{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","results","setResults","searchbar","setSearchbar","query","setQuery","useEffect","a","getWiki","fetch","response","json","data","console","log","search","className","onSubmit","e","preventDefault","type","value","onChange","target","map","index","i","url","pageid","title","dangerouslySetInnerHTML","__html","snippet","href","rel","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mPAoEeA,EAjEH,WACV,MAA8BC,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAkCF,mBAAS,IAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KACA,EAA0BJ,mBAAS,aAAnC,mBAAOK,EAAP,KAAcC,EAAd,KAEAC,oBAAS,sBAAC,sBAAAC,EAAA,sDACRC,IADQ,2CAEP,CAACJ,IAEJ,IAAMI,EAAO,uCAAG,8BAAAD,EAAA,sEACSE,MAAM,iFAAD,OACuDL,EADvD,iBADd,cACRM,EADQ,gBAIKA,EAASC,OAJd,OAIRC,EAJQ,OAKdC,QAAQC,IAAIF,GACZX,EAAWW,EAAKR,MAAMW,QANR,2CAAH,qDAkBb,OACE,sBAAKC,UAAU,MAAf,UACE,uBAAMC,SAPQ,SAAAC,GAChBA,EAAEC,iBACFd,EAASH,IAKoBc,UAAU,cAArC,UACE,oBAAIA,UAAU,YAAd,mCAEA,uBACEA,UAAU,aACVI,KAAK,OACLC,MAAOnB,EACPoB,SAnBa,SAAAJ,GACnBf,EAAae,EAAEK,OAAOF,OACtBR,QAAQC,IAAIZ,MAmBR,wBAAQc,UAAU,gBAAgBI,KAAK,SAAvC,uBAIDpB,EAAQwB,KAAI,SAACC,EAAOC,GACnB,IAAMC,EAAG,0CAAsCF,EAAMG,QAErD,OACE,sBAAKZ,UAAU,QAAf,UACE,oBAAIA,UAAU,QAAd,SAAuBS,EAAMI,QAC7B,oBACEb,UAAU,SACVc,wBAAyB,CAAEC,OAAQN,EAAMO,WAE3C,oBAAGC,KAAMN,EAAKJ,OAAO,SAASW,IAAI,WAAlC,UACE,yBACA,yBACA,yBACA,yBAJF,iBAN0BR,UCrCvBS,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.5ec13750.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './App.css';\n\nconst App = () => {\n  const [results, setResults] = useState([]);\n  const [searchbar, setSearchbar] = useState('');\n  const [query, setQuery] = useState('Wikipedia');\n\n  useEffect(async () => {\n    getWiki();\n  }, [query]);\n\n  const getWiki = async () => {\n    const response = await fetch(\n      `https://en.wikipedia.org/w/api.php?origin=*&action=query&list=search&srsearch=${query}&format=json`\n    );\n    const data = await response.json();\n    console.log(data);\n    setResults(data.query.search);\n  };\n  const UpdateSearch = e => {\n    setSearchbar(e.target.value);\n    console.log(searchbar);\n  };\n\n  const getSearch = e => {\n    e.preventDefault();\n    setQuery(searchbar);\n  };\n\n  return (\n    <div className=\"App\">\n      <form onSubmit={getSearch} className=\"search-form\">\n        <h1 className=\"topHeader\">WIKI SEARCH MADE EASY</h1>\n\n        <input\n          className=\"search-bar\"\n          type=\"text\"\n          value={searchbar}\n          onChange={UpdateSearch}\n        />\n        <button className=\"search-button\" type=\"submit\">\n          Search\n        </button>\n      </form>\n      {results.map((index, i) => {\n        const url = `https://en.wikipedia.org/?curid=${index.pageid}`;\n\n        return (\n          <div className=\"Hello\" key={i}>\n            <h1 className=\"title\">{index.title}</h1>\n            <h2\n              className=\"text23\"\n              dangerouslySetInnerHTML={{ __html: index.snippet }}\n            />\n            <a href={url} target=\"_blank\" rel=\"nofollow\">\n              <span />\n              <span />\n              <span />\n              <span />\n              Read more\n            </a>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}